@using System.Threading.Tasks
@using TurnTrackerAspNetCore.Middleware
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@model TurnTrackerAspNetCore.ViewModels.Task.TaskDetailsViewModel
@{
    ViewBag.Title = "Details";
    string cookie;
    if (!HttpContextAccessor.HttpContext.Request.Cookies.TryGetValue(TimezoneOffsetReader.CookieKey, out cookie))
    {
        cookie = "0";
    }
    int minutes;
    int.TryParse(cookie, out minutes);
    var timezoneOffset = TimeSpan.FromMinutes(-minutes);
    ViewBag.TimezoneOffset = timezoneOffset;
}
@if (!string.IsNullOrWhiteSpace(Model.Error))
{
    <div class="alert alert-danger alert-dismissible fade in" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>@Model.Error
    </div>
}
<h1>@Model.Task.Name</h1>
<div class="row">
    <div class="col-sm-6">
        <div>@(Model.Task.TeamBased ? "Team" : "Individual") Based</div>
        <div><label>Owner</label><span> @(Model.Task.User.DisplayName ?? Model.Task.User.UserName)</span></div>
        <div>
            @if (Model.Task.Period == 0m)
            {
                <span>Non-Periodic</span>
            }
            else
            {
                <span>@Model.Task.Period @Model.Task.Unit</span>
            }
        </div>
        <div><label>Modified</label><span> @Model.Task.Modified.ToOffset(timezoneOffset).ToString("G")</span></div>
        <div><label>Created</label><span> @Model.Task.Created.ToOffset(timezoneOffset).ToString("G")</span></div>
        <div>
            @if (Model.Task.Overdue)
            {
                <strong class="danger">@Model.Task.DueTimeSpan.ToString(@"hh\:mm\:ss") overdue</strong>
            }
            else
            {
                <span>@Model.Task.DueTimeSpan.ToString(@"hh\:mm\:ss") remaining</span>
            }
        </div>
        @if (User.Identity.IsAuthenticated)
        {
            <div class="action-group">
                @if (Model.CanTakeTurn)
                {
                    <form asp-route-id="@Model.Task.Id" asp-antiforgery="true" asp-controller="Turn" asp-action="Take" method="post">
                        <button class="btn btn-primary btn-sm" type="submit" title="Take Turn">
                            <span class="glyphicon glyphicon-plus"></span>
                        </button>
                    </form>
                    <button class="btn btn-primary btn-sm" title="Take Turn at Specific Time" type="button" data-toggle="collapse" data-target="#take-turn-time" aria-expanded="false" aria-controls="take-turn-time">
                        <span class="glyphicon glyphicon-time"></span>
                    </button>
                }
                <a class="btn btn-success btn-sm" asp-action="Edit" asp-route-id="@Model.Task.Id" title="Edit Task">
                    <span class="glyphicon glyphicon-pencil"></span>
                </a>
                @if (Model.CanDeleteTask)
                {
                    <button type="button" class="btn btn-danger btn-sm" data-toggle="modal" data-target="#delete-task-modal" title="Delete Task">
                        <span class="glyphicon glyphicon-trash"></span>
                    </button>
                }
            </div>
            <div class="collapse" id="take-turn-time">
                <br />
                <div class="well">
                    <form class="form-inline" asp-route-id="@Model.Task.Id" asp-antiforgery="true" asp-controller="Turn" asp-action="Take" method="post">
                        <div class="form-group">
                            <div class="input-group date datetimepicker">
                                <input type="text" name="Time" class="form-control" value="@DateTime.Now" />
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </span>
                            </div>
                        </div>
                        <button class="btn btn-primary" type="submit">Take Turn</button>
                    </form>
                </div>
            </div>
        }
    </div>
    <div class="col-sm-6">
        <h4>Participants</h4>
        @if ((Model.Counts?.Count ?? 0) == 0)
        {
            <p>No participants</p>
        }
        else
        {
            <table class="table table-condensed participants">
                <thead>
                <tr>
                    <th>User</th>
                    <th>Turns</th>
                    <th>Todo</th>
                </tr>
                </thead>
                @{
                    var firstRow = Model.Counts.First();
                }
                <tr class="@(Model.Task.TeamBased ? "" : Model.Task.Overdue ? "danger" : "info")">
                    <td>@firstRow.Name</td>
                    <td>@firstRow.TotalTurns</td>
                    <td>@(Model.MaxTurns - firstRow.TotalTurns)</td>
                </tr>
                @foreach (var row in Model.Counts.Skip(1))
                {
                    <tr>
                        <td>@row.Name</td>
                        <td>@row.TotalTurns</td>
                        <td>@(Model.MaxTurns - row.TotalTurns)</td>
                    </tr>
                }
            </table>
        }
    </div>
</div>
<h4>Turns</h4>
@if ((Model.Task.Turns?.Count ?? 0) == 0)
{
    <p>No turns</p>
}
else
{
    <table class="table table-condensed table-hover table-striped">
        <thead>
        <tr>
            <th>User</th>
            <th>Taken</th>
            <th>Modified</th>
            <th>Created</th>
            @if (User.Identity.IsAuthenticated)
            {
                <th>Actions</th>
            }
        </tr>
        </thead>
        @foreach (var turn in Model.Task.Turns)
        {
            @Html.Partial("_Turn", turn)
        }
    </table>
}

<div class="modal fade" id="delete-task-modal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Delete Task</h4>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete task '@Model.Task.Name'?</p>
            </div>
            <div class="modal-footer action-group">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                @if (Model.CanDeleteTask)
                {
                    <form asp-route-id="@Model.Task.Id" asp-antiforgery="true" asp-controller="Task" asp-action="Delete" method="post">
                        <button class="btn btn-danger" type="submit">Delete</button>
                    </form>
                }
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="delete-turn-modal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Delete Turn</h4>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the turn taken by <span id="modal-turn-taker"></span> on <span id="modal-turn-taken"></span>?</p>
            </div>
            <div class="modal-footer action-group">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <form asp-controller="Turn" asp-action="Delete" asp-route-id="0" asp-antiforgery="true" method="post">
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section footer {
    <span class="timezone">UTC Offset: @timezoneOffset</span>
}