@using System.Threading.Tasks
@using TurnTrackerAspNetCore.Middleware
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@model TaskDetailsViewModel
@{
    ViewBag.Title = "Details";
    string cookie;
    if (!HttpContextAccessor.HttpContext.Request.Cookies.TryGetValue(TimezoneOffsetReader.CookieKey, out cookie))
    {
        cookie = "0";
    }
    int minutes;
    int.TryParse(cookie, out minutes);
    var timezoneOffset = TimeSpan.FromMinutes(-minutes);
    ViewBag.TimezoneOffset = timezoneOffset;
}
<h1>@Model.Task.Name</h1>
<div class="row">
    <div class="col-sm-6">
        <div>@(Model.Task.TeamBased ? "Team" : "Individual") Based</div>
        <div>
            @if (Model.Task.Period == 0m)
            {
                <span>Non-Periodic</span>
            }
            else
            {
                <span>@Model.Task.Period @Model.Task.Unit</span>
            }
        </div>
        <div><label>Modified</label><span> @Model.Task.Modified.ToOffset(timezoneOffset)</span></div>
        <div><label>Created</label><span> @Model.Task.Created.ToOffset(timezoneOffset)</span></div>
        @if (User.Identity.IsAuthenticated)
        {
            <div class="clearfix">
                <form class="pull-left" asp-antiforgery="true" asp-action="TakeTurn" method="post">
                    @*<input asp-for="Id" type="hidden" />*@
                    <input class="btn btn-primary" type="submit" value="Take Turn" />
                </form>
                <a class="btn btn-success pull-left" asp-action="EditTask" asp-route-id="@Model.Task.Id">Edit</a>
                <form class="pull-left" asp-antiforgery="true" asp-action="DeleteTask" method="post">
                    @*<input asp-for="Id" type="hidden" />*@
                    <input class="btn btn-danger" type="submit" value="Delete" />
                </form>
            </div>
        }
    </div>
    <div class="col-sm-6">
        <h4>Active Users</h4>
        @if (Model.ActiveUsers.Count == 0)
        {
            <p>No active users</p>
        }
        else
        {
            <table class="table table-condensed table-striped">
                <thead>
                    <tr>
                        <th>User</th>
                        <th>Turns</th>
                        <th>Todo</th>
                    </tr>
                </thead>
                @foreach (var row in Model.ActiveUsers)
                {
                    <tr>
                        <td>@(row.User.DisplayName ?? row.User.UserName)</td>
                        <td>@row.TotalTurns</td>
                        <td>@(Model.MaxTurns - row.TotalTurns)</td>
                    </tr>
                }
            </table>
        }
    </div>
</div>
<h4>Turns</h4>
@if (Model.Task.Turns.Count == 0)
{
    <p>No turns</p>
}
else
{
    <table class="table table-condensed table-hover table-striped">
        <thead>
            <tr>
                <th>Id</th>
                <th>User</th>
                <th>Taken</th>
                <th>Modified</th>
                <th>Created</th>
                @if (User.Identity.IsAuthenticated)
                {
                    <th>Actions</th>
                }
            </tr>
        </thead>
        @foreach (var turn in Model.Task.Turns ?? new List<Turn>())
        {
            @Html.Partial("_Turn", turn)
        }
    </table>
}

@section footer {
    <span class="timezone">UTC Offset: @timezoneOffset</span>
}