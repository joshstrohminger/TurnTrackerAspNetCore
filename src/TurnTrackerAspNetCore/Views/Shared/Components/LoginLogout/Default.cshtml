@using System.Threading.Tasks
@using Microsoft.AspNetCore.Identity
@*@if (User.Identity.IsAuthenticated)
{
    <form class="navbar-form navbar-right" method="post" asp-antiforgery="true" asp-controller="Account" asp-action="Logout">
        <input class="btn btn-default" type="submit" value="Logout"/>
    </form>
    <ul class="nav navbar-nav navbar-right">
        <li><a asp-controller="Account" asp-action="Profile"><span class="glyphicon glyphicon-user"></span> @User.Identity.Name</a></li>
    </ul>
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li><a asp-route-returnurl="@($"{Context.Request.Path}{Context.Request.QueryString}")" asp-controller="Account" asp-action="Login">Login</a></li>
        <li><a asp-controller="Account" asp-action="Register">Register</a></li>
    </ul>
}*@

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@if (SignInManager.IsSignedIn(User))
{
    <form asp-controller="Account" asp-action="Logout" method="post" class="navbar-right">
        <ul class="nav navbar-nav navbar-right">
            <li>
                <a asp-controller="Manage" asp-action="Index" title="Manage"><span class="glyphicon glyphicon-user"></span> @UserManager.GetUserName(User)</a>
            </li>
            <li>
                <button type="submit" class="btn btn-link navbar-btn navbar-link">Log off</button>
            </li>
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li><a asp-controller="Account" asp-action="Register">Register</a></li>
        <li><a asp-controller="Account" asp-action="Login">Log in</a></li>
    </ul>
}
